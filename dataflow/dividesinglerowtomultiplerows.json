{
	"name": "dividesinglerowtomultiplerows",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "combinerowsotpt_dataset",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "divindingsinglerowintomltiplrowsotpt_dataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as integer,",
				"          empname as string,",
				"          gender as string,",
				"          country as string,",
				"          skills as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(skills = split(skills, ',')) ~> derivedColumn1",
				"derivedColumn1 foldDown(unroll(skills),",
				"     mapColumn(",
				"          empid,",
				"          empname,",
				"          gender,",
				"          country,",
				"          skills",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          empid as string,",
				"          empname as string,",
				"          gender as string,",
				"          country as string,",
				"          skills as string",
				"     ),",
				"     partitionFileNames:['dividerows.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}