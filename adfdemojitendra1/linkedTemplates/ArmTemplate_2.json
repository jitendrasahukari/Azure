{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfdemojitendra1"
		},
		"ttl_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ttl_linkedservice'"
		},
		"ttlotpt_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ttlotpt_linkedservice'"
		},
		"udf_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'udf_linkedservice'"
		},
		"udfotpt_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'udfotpt_linkedservice'"
		},
		"Handingerrorrows1_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Handingerrorrows1_linkedservice'"
		},
		"goodrows_linkedservice_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'goodrows_linkedservice'"
		},
		"sales_linkedservice_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'sales_linkedservice'"
		},
		"notcrctformat_linkedservcie_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'notcrctformat_linkedservcie'"
		},
		"copyallfiles_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'copyallfiles_linkedservice'"
		},
		"copyallfilesotpt_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'copyallfilesotpt_linkedservice'"
		},
		"deleteactvtyscenario3_dataset_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'deleteactvtyscenario3_dataset'"
		},
		"goodrows_linkedservice_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "prodstd.database.windows.net"
		},
		"goodrows_linkedservice_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "TESTDB"
		},
		"goodrows_linkedservice_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "jitendra"
		},
		"sales_linkedservice_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "prodstd.database.windows.net"
		},
		"sales_linkedservice_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "TESTDB"
		},
		"sales_linkedservice_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "jitendra"
		},
		"notcrctformat_linkedservcie_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "prodstd.database.windows.net"
		},
		"notcrctformat_linkedservcie_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "TESTDB"
		},
		"notcrctformat_linkedservcie_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "jitendra"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ttl_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ttl_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ttlotpt_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ttlotpt_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/udf_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('udf_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/udfotpt_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('udfotpt_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure-IR-new-ttl')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 30,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StringFunctions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "UDFLibrary",
				"typeProperties": {
					"sources": [],
					"sinks": [],
					"transformations": [],
					"scriptLines": [
						"gendertointeger(string) as integer = iif(i1 == 'male',1,iif(i1 == 'female',0,-1))"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/flowlet1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Flowlet",
				"typeProperties": {
					"sources": [],
					"sinks": [],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "select1"
						},
						{
							"name": "input1"
						},
						{
							"name": "output1"
						}
					],
					"scriptLines": [
						"input(output(",
						"          empid as integer,",
						"          empname as string,",
						"          gender as string,",
						"          depid as integer,",
						"          depname as string",
						"     ),",
						"     order: 0,",
						"     allowSchemaDrift: true) ~> input1",
						"input1 aggregate(groupBy(empid,",
						"          empname,",
						"          gender,",
						"          depid,",
						"          depname),",
						"     count = count()) ~> aggregate1",
						"aggregate1 select(mapColumn(",
						"          empid,",
						"          empname,",
						"          gender,",
						"          depid,",
						"          depname",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 output() ~> output1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Handingerrorrows1_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Handingerrorrows1_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/goodrows_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('goodrows_linkedservice_properties_typeProperties_server')]",
					"database": "[parameters('goodrows_linkedservice_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('goodrows_linkedservice_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('goodrows_linkedservice_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sales_linkedservice_properties_typeProperties_server')]",
					"database": "[parameters('sales_linkedservice_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sales_linkedservice_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sales_linkedservice_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/notcrctformat_linkedservcie')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('notcrctformat_linkedservcie_properties_typeProperties_server')]",
					"database": "[parameters('notcrctformat_linkedservcie_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('notcrctformat_linkedservcie_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('notcrctformat_linkedservcie_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyallfiles_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('copyallfiles_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyallfilesotpt_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('copyallfilesotpt_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/deleteactvtyscenario3_dataset')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('deleteactvtyscenario3_dataset_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDatasetForDeleteActivity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your source store to delete files.",
				"linkedServiceName": {
					"referenceName": "template1_linkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().FolderPath",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emailconfig_linkedservice1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "azureactivitiescontainer"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Test_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "lookup.csv",
						"container": "employee"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "department",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/arraydep_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "arraydep_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "assert_dep.csv",
						"folderPath": "input",
						"container": "azureactivitiescontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "depId",
						"type": "String"
					},
					{
						"name": "depName",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/assert_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "assert_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "assert_data.csv",
						"folderPath": "input",
						"container": "azureactivitiescontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "emp_id",
						"type": "String"
					},
					{
						"name": "name ",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "doj",
						"type": "String"
					},
					{
						"name": "depid",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/assertotpt_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "assertotpt_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output3",
						"container": "azureactivitiescontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empname",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "salary",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}